{"version":3,"sources":["Components/Search.js","Components/Header.js","api.js","utils.js","Pages/Home.js","Components/Loader.js","Components/Billboard.js","Components/InfoCard.js","Components/Section.js","Components/ErrorMsg.js","Components/Details.js","Components/Detail.js","Pages/TV.js","Pages/Movie.js","Pages/Search.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Form","styled","form","IconContainer","div","SearchContainer","Input","input","Search","useState","clickSearchBtn","setClickSearchBtn","searchTerm","setSearchTerm","searchRef","useRef","history","useHistory","onSubmit","event","preventDefault","push","pathname","state","ref","type","placeholder","value","onChange","target","onClick","current","style","firstChild","width","focus","paddingLeft","paddingRight","icon","faSearch","className","Header","header","Logo","List","ul","Item","li","props","isCurrent","withRouter","location","to","src","alt","api","axios","create","baseURL","params","api_key","language","tvApi","get","id","append_to_response","include_image_language","term","query","encodeURIComponent","moviesApi","noImage","datas","filter","backdrop_path","top10","slice","makeImageFullUrl","path","size","makeYoutubeUrl","gubun","key","includes","Error","Container","Content","Populars","totalWidth","keyframes","Popular","posterUrl","MovieLink","Link","Home","postersRef","popularMovie","setPopularMovie","setTotalWidth","getTotalPostersWidth","offsetWidth","useEffect","a","popular","data","results","Helmet","map","idx","poster_path","Box","ellipsis1","ellipsis2","ellipsis3","Loading","Array","fill","_","Poster","similar","bgUrl","LogoImage","logo","css","file_path","height","Billboard","logos","title","children","length","Card","motion","Circle","Genres","Genre","cardVariants","hover","opacity","zIndex","transition","delay","duaration","InfoCard","genres","variants","faAngleDown","genre","Title","span","RowContainer","MoveButton","position","isPopular","rank","rowVariants","init","moveToLeft","x","window","outerWidth","visible","exit","normal","scale","y","Section","keyword","cards","isMovie","maxIndex","Math","ceil","movieMatch","useRouteMatch","searchMatch","index","setIndex","setExit","back","setBack","currentPosition","setCurrentPosition","settingCurrentPosition","sum","toggleExitState","prev","AnimatePresence","custom","initial","onExitComplete","animate","duration","card","layoutId","String","whileHover","onCardClicked","original_title","original_name","Text","ErrorMsg","text","Overlay","DeatilContainer","CloseButton","Detail","Date","DetailItem","before","VideoContainer","Thumbnail","url","VideoInfo","p","Similar","Details","detailMatch","scrollY","useViewportScroll","containerRef","loading","setLoading","error","setError","details","setDetails","videos","setVideos","similars","setSimilars","setTitle","isNaN","goBack","replace","top","Loader","images","faTimes","release_date","first_air_date","last_air_date","name","overview","published_at","open","split","val","scrollTop","onSimilarCardClicked","Deatil","disableBodyScroll","document","body","enableBodyScroll","Wrapper","MainBillboardContiner","MoveToDetailButton","CardContainer","TV","billboard","setBillboard","random","setRandom","setPopular","topRated","setTopRated","airingToday","setAiringToday","floor","createGenreKey","genre_ids","_id","find","console","log","maxOverViewLength","indexOf","faInfoCircle","Movie","nowPlaying","setNowPlaying","upcoming","setUpcoming","SearchTerm","useLocation","tvResults","setTvResults","movieResults","setMovieResults","tvGenres","movieGenres","Routers","basename","exact","component","from","globalStyles","createGlobalStyle","reset","App","GlobalStyles","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.cd9a8e6b.chunk.js","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Form = styled.form`\n  display: flex;\n`;\n\nconst IconContainer = styled.div`\n  cursor: pointer;\n`;\n\nconst SearchContainer = styled.div`\n  width: 0;\n  padding: 0.5rem 0;\n  margin-right: 0.3rem;\n  transition: all 0.5s linear;\n\n  &:focus-within {\n    border-bottom: 1px solid white;\n  }\n`;\n\nconst Input = styled.input`\n  all: unset;\n  width: 100%;\n  text-align: left;\n  font-size: smaller;\n`;\n\nconst Search = () => {\n  const [clickSearchBtn, setClickSearchBtn] = useState(false);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const searchRef = useRef();\n  const history = useHistory();\n\n  const handleSearchWindow = () => {\n    const { style, firstChild } = searchRef.current;\n    if (clickSearchBtn) {\n      style.width = \"15rem\";\n      firstChild.focus();\n      style.paddingLeft = style.paddingRight = \"1rem\";\n    } else {\n      setSearchTerm(\"\");\n      style.width = style.paddingLeft = style.paddingRight = \"\";\n    }\n\n    firstChild.value = searchTerm;\n    setClickSearchBtn(!clickSearchBtn);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    history.push({ pathname: \"/search\", state: { searchTerm } });\n  };\n\n  const updateTerm = ({ target: { value } }) => {\n    setSearchTerm(value);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <SearchContainer ref={searchRef}>\n        <Input\n          type=\"text\"\n          placeholder=\"사람, 제목, 장르를 입력하세요\"\n          value={searchTerm}\n          onChange={updateTerm}\n        />\n      </SearchContainer>\n      <IconContainer onClick={handleSearchWindow}>\n        <FontAwesomeIcon icon={faSearch} className=\"search\" />\n      </IconContainer>\n    </Form>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Search from \"./Search\";\n\nconst logo_src = \"logo_default.png\";\n\nconst Header = styled.header`\n  position: fixed;\n  display: flex;\n  align-items: center;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 3.75rem;\n  padding: 0 1.1rem;\n  font-size: 0.9rem;\n  color: white;\n  background-color: rgba(20, 20, 20, 0.8);\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n  z-index: 5;\n`;\n\nconst Logo = styled.div`\n  padding: 0 1rem;\n\n  a {\n    display: flex;\n  }\n\n  & img {\n    width: 8rem;\n    align-items: center;\n  }\n`;\n\nconst List = styled.ul`\n  display: inherit;\n  width: 100%;\n`;\n\nconst Item = styled.li`\n  padding: 0 1.25rem;\n  height: 3.75rem;\n  text-align: center;\n  font-weight: ${(props) => (props.isCurrent ? 600 : 100)};\n  transition: 0.4s ease-out;\n\n  & > * {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 100%;\n  }\n\n  &:last-child {\n    margin-left: auto;\n    font-size: 1.2rem;\n  }\n\n  &:hover:not(:last-child) {\n    opacity: ${(props) => (props.isCurrent ? \"inherit\" : 0.6)};\n  }\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <Logo>\n      <Link to=\"/\">\n        <img src={logo_src} alt=\"logo\" />\n      </Link>\n    </Logo>\n    <List>\n      <Item isCurrent={pathname === \"/\"}>\n        <Link to=\"/\"> 홈</Link>\n      </Item>\n      <Item isCurrent={pathname === \"/tv\"}>\n        <Link to=\"/tv\">TV 프로그램</Link>\n      </Item>\n      <Item isCurrent={pathname === \"/movie\"}>\n        <Link to=\"/movie\">영화</Link>\n      </Item>\n      <Item isCurrent={pathname === \"/trending\"}>\n        <Link to=\"/trending\">NEW! 요즘 대세 콘텐츠</Link>\n      </Item>\n      <Item isCurrent={pathname === \"/search\"}>\n        <Search />\n      </Item>\n    </List>\n  </Header>\n));\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"9bbaa74d076c46799b7b1e527458fe42\",\n    language: \"ko-KR\",\n  },\n});\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  onTheAir: () => api.get(\"tv/on_the_air\"),\n  getGenres: () => api.get(\"genre/tv/list\"),\n  tvShowDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"images\",\n        include_image_language: \"null,en\",\n      },\n    }),\n  getVideos: (id) => api.get(`tv/${id}/videos`),\n  getSimilarTvShows: (id) => api.get(`tv/${id}/similar`),\n  search: (term) =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  getGenres: () => api.get(\"genre/movie/list\"),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"images\",\n        include_image_language: \"null,en\",\n      },\n    }),\n  getVideos: (id) => api.get(`movie/${id}/videos`),\n  getSimilarMovies: (id) => api.get(`movie/${id}/similar`),\n  search: (term) =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n\nexport const trandingApi = {\n  allTrands: () => api.get(\"trending/all/week\"),\n};\n","export const noImage = (datas) =>\n  datas.filter(({ backdrop_path }) => (backdrop_path ? true : false));\n\nexport const top10 = (datas) => datas.slice(0, 10);\n\nexport const makeImageFullUrl = (path, size = \"original\") =>\n  `https://image.tmdb.org/t/p/${size}/${path}`;\n\nexport const makeYoutubeUrl = (gubun, key) => {\n  if (![\"video\", \"thumnail\"].includes(gubun))\n    throw new Error(\"'param' must be a TheEnum value\");\n  return gubun === \"video\"\n    ? `https://www.youtube.com/watch?v=${key}`\n    : `https://img.youtube.com/vi/${key}/0.jpg`;\n};\n","import { useRef, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Helmet from \"react-helmet\";\nimport styled, { keyframes } from \"styled-components\";\nimport { moviesApi } from \"../api\";\nimport { noImage, top10, makeImageFullUrl } from \"../utils\";\n\nconst Container = styled.div`\n  width: 100%;\n  height: calc(100vh - 64px);\n  display: flex;\n  overflow-x: hidden;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Content = styled.div`\n  margin-bottom: 0.5rem;\n\n  h4 {\n    color: #ddd;\n    font-weight: 200;\n  }\n`;\n\nconst movingPosters = (width) => keyframes`\n  from {\n    transform: translateX(0%);\n  }\n  to {\n    transform: translateX(calc(100vw - ${width}px));\n  }\n`;\n\nconst Populars = styled.div`\n  display: flex;\n  padding: 2rem;\n  height: fit-content;\n  margin-bottom: 1rem;\n  animation: ${({ totalWidth }) => movingPosters(totalWidth)} 10s linear 1s\n    forwards alternate infinite;\n  place-self: flex-start;\n`;\n\nconst Popular = styled.div`\n  background-image: url(${({ posterUrl }) => posterUrl});\n  background-size: cover;\n  background-position: center center;\n  width: 15rem;\n  height: 22rem;\n\n  &:not(:last-child) {\n    margin-right: 1rem;\n  }\n`;\n\nconst MovieLink = styled(Link)`\n  background-color: #e42414;\n  border-radius: 3px;\n  padding: 0.7rem 5rem;\n  font-weight: 100;\n  cursor: pointer;\n  color: white;\n\n  &:hover {\n    opacity: 0.7;\n  }\n`;\n\nfunction Home() {\n  const postersRef = useRef();\n  const [popularMovie, setPopularMovie] = useState([]);\n  const [totalWidth, setTotalWidth] = useState(10);\n\n  const getTotalPostersWidth = () => {\n    const { offsetWidth } = postersRef.current;\n    setTotalWidth(offsetWidth);\n  };\n\n  useEffect(() => {\n    (async () => {\n      const {\n        data: { results: popular },\n      } = await moviesApi.popular();\n      setPopularMovie(top10(noImage(popular)));\n      getTotalPostersWidth();\n    })();\n  }, []);\n\n  return (\n    <>\n      <Helmet>\n        <title>Home - Homeflix</title>\n      </Helmet>\n      <Container>\n        <Content>\n          <h1>보고 싶은 콘텐츠를 지금 만나보세요!</h1>\n        </Content>\n        <Content>\n          <h4>Homeflix에서 최신 인기 TV 프로그램, 영화, 해외 시리즈까지!</h4>\n        </Content>\n        {popularMovie && (\n          <Populars ref={postersRef} totalWidth={totalWidth}>\n            {popularMovie.map(({ poster_path }, idx) => (\n              <Popular\n                key={idx}\n                posterUrl={makeImageFullUrl(poster_path, \"w500\")}\n              ></Popular>\n            ))}\n          </Populars>\n        )}\n        <MovieLink to=\"/movie\">자세히 보기</MovieLink>\n      </Container>\n    </>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100%;\n  height: calc(100vh - 64px);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Box = styled.div`\n  height: 12rem;\n`;\n\nconst ellipsis1 = keyframes`\n  from {\n    transform: scale(0);\n  }\n  to {\n    transform: scale(1);\n  }\n`;\n\nconst ellipsis2 = keyframes`\n  from {\n    transform: translate(0, 0);\n  }\n  to {\n    transform: translate(24px, 0);\n  }\n`;\n\nconst ellipsis3 = keyframes`\n  from {\n    transform: scale(1);\n  }\n  to {\n    transform: scale(0);\n  }\n`;\n\nconst Loading = styled.div`\n  display: inline-block;\n  position: relative;\n  width: 5rem;\n\n  &::before {\n    content: \"LOADING\";\n    position: absolute;\n    left: -1.9rem;\n    bottom: -1.2rem;\n    font-size: 1.56rem;\n    letter-spacing: 3px;\n  }\n\n  div {\n    position: absolute;\n    top: 1.833rem;\n    width: 0.722rem;\n    height: 0.722rem;\n    border-radius: 50%;\n    background: #df5458;\n    font-family: impact;\n    font-size: 1.8rem;\n\n    animation-timing-function: cubic-bezier(0, 1, 1, 0);\n\n    &:nth-child(1) {\n      left: 0.5rem;\n      animation: ${ellipsis1} 0.6s infinite;\n    }\n\n    &:nth-child(2) {\n      left: 0.5rem;\n      animation: ${ellipsis2} 0.6s infinite;\n    }\n\n    &:nth-child(3) {\n      left: 1.777rem;\n      animation: ${ellipsis2} 0.6s infinite;\n    }\n\n    &:nth-child(4) {\n      left: 3.111rem;\n      animation: ${ellipsis3} 0.6s infinite;\n    }\n  }\n`;\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default () => (\n  <Container>\n    <Box>\n      <Loading>\n        {Array(4)\n          .fill()\n          .map((_, idx) => (\n            <div key={idx} />\n          ))}\n      </Loading>\n    </Box>\n  </Container>\n);\n","import PropTypes from \"prop-types\";\nimport styled, { css } from \"styled-components\";\n\nimport { makeImageFullUrl } from \"../utils\";\n\nconst Poster = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  height: ${({ similar }) => (!similar ? \"75vh\" : \"8.5rem\")};\n  flex-direction: column;\n  border-radius: 4px;\n  background-image: ${({ similar }) =>\n      !similar ? \"linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\" : null}\n    url(${(props) => props.bgUrl});\n  background-size: cover;\n  background-position: center top;\n\n  & > * {\n    position: absolute;\n  }\n`;\n\nconst LogoImage = styled.div`\n  ${({ logo }) =>\n    logo\n      ? css`\n          background-image: url(${({ logo }) =>\n            makeImageFullUrl(logo.file_path, \"w500\")});\n          width: 20rem;\n          height: ${({ logo: { height, width } }) =>\n            `${(height / width) * 20.83}rem`};\n        `\n      : css`\n          font-size: 3rem;\n          font-weight: bolder;\n        `};\n\n  background-size: contain;\n  background-repeat: no-repeat;\n  right: 2rem;\n  bottom: 2rem;\n`;\n\nexport default function Billboard({\n  bgUrl,\n  logos,\n  title,\n  similar = false,\n  children,\n}) {\n  return (\n    <Poster similar={similar} bgUrl={makeImageFullUrl(bgUrl)}>\n      {!similar && (\n        <LogoImage logo={logos[logos.length - 1]}>\n          {logos.length > 0 ? \"\" : title}\n        </LogoImage>\n      )}\n      {children}\n    </Poster>\n  );\n}\n\nBillboard.propTypes = {\n  bgUrl: PropTypes.string.isRequired,\n  logos: PropTypes.array,\n  title: PropTypes.string,\n  similar: PropTypes.bool,\n  children: PropTypes.node,\n};\n","import PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Card = styled(motion.div)`\n  background-color: #181818;\n  display: block;\n  position: absolute;\n  bottom: -5.6rem;\n  width: 100%;\n  height: 6rem;\n  padding: 1rem;\n  opacity: 0;\n  border-radius: 0 0 4px 4px;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 0.9rem;\n  font-weight: 400;\n  letter-spacing: 0.05rem;\n`;\n\nconst Circle = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-width: 2rem;\n  min-height: 2rem;\n  margin-left: auto;\n  padding-top: 0.1rem;\n  background-color: #303030;\n  border-radius: 99px;\n  border: 1.5px solid #595959;\n  font-size: 1.1rem;\n  cursor: pointer;\n\n  &:hover {\n    border: 1.5px solid white;\n  }\n`;\n\nconst Genres = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  font-size: 0.75rem;\n  font-weight: 100;\n  margin-top: 0.2rem;\n`;\n\nconst Genre = styled.div`\n  &:not(:last-child) {\n    margin-right: 0.2rem;\n\n    &::after {\n      content: \"·\";\n      margin-left: 0.2rem;\n      font-weight: 800;\n    }\n  }\n`;\n\nconst cardVariants = {\n  hover: {\n    opacity: 1,\n    zIndex: 5,\n    transition: {\n      delay: 0.5,\n      duaration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\n\nfunction InfoCard({ title, genres }) {\n  return (\n    <Card variants={cardVariants}>\n      <Header>\n        {title}\n        <Circle>\n          <FontAwesomeIcon icon={faAngleDown} className=\"fa-angle-down\" />\n        </Circle>\n      </Header>\n      <Genres>\n        {genres && genres.map((genre, idx) => <Genre key={idx}>{genre}</Genre>)}\n      </Genres>\n    </Card>\n  );\n}\n\nInfoCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  genres: PropTypes.array,\n};\n\nexport default InfoCard;\n","import { useState } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport styled, { css } from \"styled-components\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nimport { makeImageFullUrl } from \"../utils\";\nimport InfoCard from \"./InfoCard\";\n\nconst Container = styled(motion.div)`\n  height: 8.5rem;\n  display: flex;\n  position: relative;\n  :not(:last-child) {\n    margin-bottom: 5rem;\n  }\n`;\n\nconst Title = styled.span`\n  font-weight: 600;\n  font-size: 1.12rem;\n  margin-left: 0.4rem;\n`;\n\nconst RowContainer = styled(motion.div)`\n  top: 2rem;\n  width: 100%;\n  position: absolute;\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  gap: 0.625rem;\n`;\n\nconst MoveButton = styled.div`\n  position: absolute;\n  top: 50%;\n  cursor: pointer;\n  font-size: 3rem;\n  font-weight: 900;\n  transition: opacity step-end 1s;\n  z-index: 3;\n\n  ${(props) => props.position === \"left\"} {\n    right: -1rem;\n  }\n\n  ${({ position }) => position === \"right\"} {\n    left: -1rem;\n  }\n\n  &.hidden {\n    opacity: 0;\n    cursor: default;\n  }\n\n  &:hover:not(.hidden) {\n    opacity: 0.6;\n    font-size: 4rem;\n    margin: -0.3rem -0.24rem 0;\n  }\n`;\n\nconst Card = styled(motion.div)`\n  position: relative;\n  background-image: url(${(props) => props.bgUrl});\n  height: 8.5rem;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  cursor: pointer;\n\n  ${({ isPopular }) =>\n    isPopular &&\n    css`\n      &::before {\n        content: \"${({ rank }) => rank}\";\n        font-size: 9rem;\n        font-weight: 900;\n        color: transparent;\n        -webkit-text-stroke: 3px #f9f9f9;\n        display: flex;\n        justify-content: end;\n        line-height: normal;\n        position: absolute;\n      }\n    `}\n\n  &:first-child {\n    transform-origin: center left;\n  }\n\n  &:last-child {\n    transform-origin: center right;\n  }\n`;\n\nconst rowVariants = {\n  init: (moveToLeft) => ({\n    x: moveToLeft ? -window.outerWidth - 10 : window.outerWidth + 10,\n  }),\n  visible: {\n    x: 0,\n  },\n  exit: (moveToLeft) => ({\n    x: moveToLeft ? window.outerWidth + 10 : -window.outerWidth - 10,\n  }),\n};\n\nconst cardVariants = {\n  normal: {\n    scale: 1,\n  },\n\n  hover: {\n    scale: 1.3,\n    y: -20,\n    zIndex: 5,\n    transition: {\n      delay: 0.5,\n      duaration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\n\nconst Section = ({ title, keyword, cards, isMovie }) => {\n  const offset = 5,\n    maxIndex = Math.ceil(cards.length / offset) - 1,\n    position = { left: \"left\", right: \"right\", both: \"both\" };\n  const history = useHistory();\n  const movieMatch = useRouteMatch(\"/movie\");\n  const searchMatch = useRouteMatch(\"/search\");\n  const [index, setIndex] = useState(0);\n  const [exit, setExit] = useState(false);\n  const [back, setBack] = useState(false);\n  const [currentPosition, setCurrentPosition] = useState(position.left);\n\n  const settingCurrentPosition = (sum) => {\n    if (exit) return;\n    toggleExitState();\n    setIndex((index) => index + sum);\n    setCurrentPosition(\n      index + sum === 0\n        ? position.left\n        : index + sum === maxIndex\n        ? position.right\n        : position.both\n    );\n  };\n\n  const moveToLeft = () => {\n    if (cards && index > 0) {\n      setBack(true);\n      settingCurrentPosition(-1);\n    }\n  };\n\n  const moveToRight = () => {\n    if (cards && index < maxIndex) {\n      setBack(false);\n      settingCurrentPosition(1);\n    }\n  };\n\n  const toggleExitState = () => setExit((prev) => !prev);\n\n  const onCardClicked = (isMovie, id, { searchTerm } = \"\") => {\n    history.push({\n      pathname: `/${searchMatch ? \"search\" : isMovie ? \"movie\" : \"tv\"}/${id}`,\n      state: { keyword, isMovie, searchTerm },\n    });\n  };\n\n  return (\n    <Container>\n      <Title>{title}</Title>\n      <MoveButton\n        position={\"left\"}\n        onClick={moveToLeft}\n        className={currentPosition === position.left ? \"hidden\" : \"\"}\n      >{`<`}</MoveButton>\n      <AnimatePresence\n        custom={back}\n        initial={false}\n        onExitComplete={toggleExitState}\n      >\n        <RowContainer\n          key={index}\n          custom={back}\n          variants={rowVariants}\n          initial=\"init\"\n          animate=\"visible\"\n          exit=\"exit\"\n          transition={{ type: \"tween\", duration: 1 }}\n        >\n          {cards.slice(index * offset, index * offset + offset).map((card) => (\n            <Card\n              key={card.id}\n              layoutId={`${keyword}-${String(card.id)}`}\n              bgUrl={makeImageFullUrl(card.backdrop_path, \"w300\")}\n              variants={cardVariants}\n              whileHover=\"hover\"\n              initial=\"normal\"\n              transition={{ type: \"tween\" }}\n              onClick={() =>\n                onCardClicked(\n                  searchMatch ? isMovie : movieMatch !== null,\n                  card.id,\n                  history.location.state\n                )\n              }\n            >\n              <InfoCard\n                title={\n                  (searchMatch ? isMovie : movieMatch !== null)\n                    ? card.original_title\n                    : card.original_name\n                }\n                genres={card.genres}\n              />\n            </Card>\n          ))}\n        </RowContainer>\n      </AnimatePresence>\n      <MoveButton\n        position={\"right\"}\n        onClick={moveToRight}\n        className={currentPosition === position.right ? \"hidden\" : \"\"}\n      >{`>`}</MoveButton>\n    </Container>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  keyword: PropTypes.string.isRequired,\n  cards: PropTypes.array,\n  isPopular: PropTypes.bool,\n  isMovie: PropTypes.bool,\n};\n\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst NOT_FOUND = \"404\";\nconst ERROR = \"error\";\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${(props) => (props.type === NOT_FOUND ? \"#95a5a6\" : \"#e74c3c\")};\n`;\n\nconst ErrorMsg = ({ type, text }) => (\n  <Container>\n    <Text type={type}>{text}</Text>\n  </Container>\n);\n\nErrorMsg.propTypes = {\n  type: PropTypes.oneOf([NOT_FOUND, ERROR]).isRequired,\n  text: PropTypes.string.isRequired,\n};\n\nexport default ErrorMsg;\n","import { useState, useEffect, useRef } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { motion, useViewportScroll } from \"framer-motion\";\nimport { tvApi, moviesApi } from \"../api\";\nimport { noImage, makeYoutubeUrl } from \"../utils\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nimport Loader from \"./Loader\";\nimport ErrorMsg from \"./ErrorMsg\";\nimport Billboard from \"./Billboard\";\n\nconst badge = `\n  display: flex;\n  width: fit-content;\n  align-items: center;\n  height: 2em;\n  margin-left: -0.2rem;\n  padding: 0.1rem 0.5rem;\n  border: 1px solid #595959;\n  border-radius: 9px;\n  font-size: 0.7em;\n  font-weight: 300;\n  margin-bottom: 0.8rem;\n`;\n\nconst Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.4);\n  opacity: 0;\n  z-index: 10;\n`;\n\nconst DeatilContainer = styled(motion.div)`\n  position: absolute;\n  width: 50rem;\n  height: calc(100vh - 25px);\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  border-radius: 4px;\n  background-color: #181818;\n  letter-spacing: 0.1rem;\n  z-index: 99;\n  scroll-behavior: smooth;\n  overscroll-behavior: contain;\n  overflow: auto;\n`;\n\nconst CloseButton = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  top: 1rem;\n  right: 1rem;\n  min-width: 2rem;\n  min-height: 2rem;\n  padding-left: 0.065rem;\n  background-color: #303030;\n  border-radius: 99px;\n  border: 1.5px solid #595959;\n  font-size: 1.1rem;\n  cursor: pointer;\n\n  &:hover {\n    color: rgba(255, 255, 255, 0.5);\n  }\n`;\n\nconst Detail = styled.div`\n  background: linear-gradient(rgba(0, 0, 0, 1), rgba(0, 0, 0, 0));\n  padding: 1rem 2rem;\n  font-weight: 100;\n`;\n\nconst Date = styled.div`\n  display: flex;\n  font-size: 0.9rem;\n\n  & div:nth-child(2) {\n    margin-left: 0.3rem;\n\n    &::before {\n      content: \"~\";\n      margin-right: 0.3rem;\n    }\n  }\n`;\n\nconst Title = styled.div`\n  margin-top: 0.5rem;\n  ${({ similar }) =>\n    !similar\n      ? `\n    font-size: 3rem;\n    font-weight: 800;\n  `\n      : `\n    font-size: 0.9rem;\n    font-weight: inherit;\n  `}\n`;\n\nconst Genres = styled.div`\n  display: flex;\n  margin-top: 1.3rem;\n  flex-wrap: wrap;\n  font-weight: 100;\n`;\n\nconst Genre = styled.div`\n  &:not(:last-child) {\n    margin-right: 0.2rem;\n\n    &::after {\n      content: \"·\";\n      margin-left: 0.2rem;\n      font-weight: 800;\n    }\n  }\n`;\n\nconst DetailItem = styled.div`\n  margin-top: 1.2rem;\n  font-weight: 400;\n  line-height: 1.2;\n  ${({ similar }) =>\n    similar &&\n    `\n    font-size: 0.7rem;\n    margin-top: 0;\n    color: #f5f5f5;\n\n    &::before {\n      background-color: black;\n      border: 0 !important;\n      color: white;\n    }`}\n\n  &::before {\n    content: \"${({ before }) => before}\";\n    ${badge};\n  }\n\n  &.similars {\n    display: grid;\n    gap: 1rem;\n    grid-template-columns: repeat(3, 1fr);\n    grid-template-rows: auto;\n  }\n`;\n\nconst VideoContainer = styled.div`\n  border: 1px solid #585858;\n  border-radius: 10px;\n  display: flex;\n  position: relative;\n  padding: 1rem;\n  cursor: pointer;\n\n  &:not(:last-child) {\n    margin-bottom: 0.5rem;\n  }\n`;\n\nconst Thumbnail = styled.div`\n  min-width: 35%;\n  overflow: hidden;\n  margin-right: 0.8rem;\n\n  & > div {\n    background-image: url(${({ url }) => url});\n    background-repeat: no-repeat;\n    background-size: cover;\n    border: none;\n    height: 11rem;\n    margin: -1.5rem 0;\n  }\n`;\n\nconst VideoInfo = styled.p`\n  &:last-child {\n    position: absolute;\n    bottom: 0.4rem;\n    right: 0.6rem;\n    font-weight: 200;\n    font-size: 0.7rem;\n    color: #a9a9a9;\n\n    &::before {\n      content: \"published at: \";\n    }\n  }\n`;\n\nconst Similar = styled.div`\n  position: relative;\n  background-color: #2f2f2f;\n  padding-bottom: 1rem;\n  border-radius: 10px;\n  cursor: pointer;\n\n  &:first-child {\n    grid-column: 1 / 2;\n  }\n\n  & :not(:first-child) {\n    padding: 0.5rem 1rem;\n  }\n`;\n\nfunction Details() {\n  const detailMatch = useRouteMatch();\n  const searchMatch = useRouteMatch(\"/search\");\n  const history = useHistory();\n  const {\n    params: { id },\n  } = detailMatch;\n  let keyword = \"\",\n    isMovie = false,\n    searchTerm = \"\";\n  const { scrollY } = useViewportScroll();\n  const containerRef = useRef();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [details, setDetails] = useState({});\n  const [videos, setVideos] = useState([]);\n  const [similars, setSimilars] = useState([]);\n  const [title, setTitle] = useState(\"\");\n\n  if (history.location.state)\n    ({\n      location: {\n        state: { keyword, isMovie, searchTerm },\n      },\n    } = history);\n  else isMovie = history.location.pathname.includes(\"movie\");\n\n  useEffect(() => {\n    let results = null,\n      videos = null,\n      similars = null;\n    (async () => {\n      try {\n        if (isNaN(+id)) return null;\n        if (!isMovie) {\n          ({ data: results } = await tvApi.tvShowDetail(+id));\n          ({\n            data: { results: videos },\n          } = await tvApi.getVideos(+id));\n          ({\n            data: { results: similars },\n          } = await tvApi.getSimilarTvShows(+id));\n        } else {\n          ({ data: results } = await moviesApi.movieDetail(+id));\n          ({\n            data: { results: videos },\n          } = await moviesApi.getVideos(+id));\n          ({\n            data: { results: similars },\n          } = await moviesApi.getSimilarMovies(+id));\n        }\n        setDetails(results);\n        setTitle(isMovie ? results.original_title : results.original_name);\n        setVideos(videos.slice(0, 5));\n        setSimilars(noImage(similars).slice(0, 6));\n        setLoading(results && videos && similars ? false : true);\n      } catch {\n        setError(`[${id}] 정보를 찾을 수 없습니다.`);\n      }\n    })();\n    return () => {\n      setTitle(\"\");\n      setDetails({});\n      setVideos([]);\n      setSimilars([]);\n      setLoading(true);\n    };\n  }, [isMovie, id]);\n\n  const goBack = () => {\n    history.push({\n      pathname: `/${detailMatch.path.replace(/\\/|:id/g, \"\")}`,\n      state: { searchTerm },\n    });\n  };\n\n  const onSimilarCardClicked = (id) => {\n    containerRef.current.scrollTop = 0;\n    history.push({\n      pathname: `/${searchMatch ? \"search\" : isMovie ? \"movie\" : \"tv\"}/${id}`,\n      state: history.location.state,\n    });\n  };\n\n  return (\n    <>\n      <Overlay\n        onClick={goBack}\n        exit={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n      />\n      <DeatilContainer\n        layoutId={`${keyword}-${id}`}\n        style={{ top: scrollY.get() + 25 }}\n        ref={containerRef}\n      >\n        {loading ? (\n          <Loader />\n        ) : (\n          <>\n            <Billboard\n              bgUrl={details.backdrop_path}\n              logos={details.images.logos}\n              title={title}\n            >\n              <CloseButton onClick={goBack}>\n                <FontAwesomeIcon icon={faTimes} className=\"fa-times\" />\n              </CloseButton>\n            </Billboard>\n            <Detail>\n              <Date>\n                {!isMovie ? (\n                  <>\n                    <div>{details.first_air_date}</div>\n                    <div>{details.last_air_date}</div>\n                  </>\n                ) : (\n                  <div>{details.release_date}</div>\n                )}\n              </Date>\n              <Title>{title}</Title>\n              <Genres>\n                {details.genres.map(({ _, name }, idx) => (\n                  <Genre key={idx}>{name}</Genre>\n                ))}\n              </Genres>\n              <DetailItem before={\"Description\"}>\n                {details.overview.length > 0 ? details.overview : \"-\"}\n              </DetailItem>\n              <DetailItem before={\"Trailers & More\"}>\n                {videos.length > 0\n                  ? videos.map(({ key, name, published_at }) => (\n                      <VideoContainer\n                        key={key}\n                        title={name}\n                        onClick={() =>\n                          window.open(makeYoutubeUrl(\"video\", key))\n                        }\n                      >\n                        <Thumbnail url={makeYoutubeUrl(\"thumnail\", key)}>\n                          <div />\n                        </Thumbnail>\n                        {[name, published_at.split(\" \")[0]].map((val, idx) => (\n                          <VideoInfo key={idx}>{val}</VideoInfo>\n                        ))}\n                      </VideoContainer>\n                    ))\n                  : \"-\"}\n              </DetailItem>\n              <DetailItem className=\"similars\" before={\"More Like This\"}>\n                {similars.length > 0\n                  ? similars.map((similar, idx) => (\n                      <Similar\n                        key={idx}\n                        title={\n                          !isMovie\n                            ? similar.original_name\n                            : similar.original_title\n                        }\n                        onClick={() => onSimilarCardClicked(similar.id)}\n                      >\n                        <Billboard similar bgUrl={similar.backdrop_path} />\n                        <Title similar>\n                          {!isMovie\n                            ? similar.original_name\n                            : similar.original_title}\n                        </Title>\n                        <DetailItem similar before={\"Description\"}>\n                          {similar.overview.length > 0 ? similar.overview : \"-\"}\n                        </DetailItem>\n                      </Similar>\n                    ))\n                  : \"-\"}\n              </DetailItem>\n            </Detail>\n          </>\n        )}\n        {error && <ErrorMsg type=\"error\" text={error} />}\n      </DeatilContainer>\n    </>\n  );\n}\n\nexport default Details;\n","import { useRouteMatch } from \"react-router-dom\";\nimport { AnimatePresence } from \"framer-motion\";\nimport { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";\n\nimport Details from \"./Details\";\n\nfunction Deatil() {\n  const detailMatch = useRouteMatch([\"/tv/:id\", \"/movie/:id\", \"/search/:id\"]);\n  detailMatch\n    ? disableBodyScroll(document.body)\n    : enableBodyScroll(document.body);\n  return <AnimatePresence>{detailMatch && <Details />}</AnimatePresence>;\n}\n\nexport default Deatil;\n","import { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Helmet from \"react-helmet\";\nimport styled from \"styled-components\";\nimport { tvApi } from \"../api\";\nimport { noImage, top10 } from \"../utils\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\n\nimport Loader from \"../Components/Loader\";\nimport Billboard from \"../Components/Billboard\";\nimport Section from \"../Components/Section\";\nimport Detail from \"../Components/Detail\";\nimport ErrorMsg from \"../Components/ErrorMsg\";\n\nconst Wrapper = styled.div`\n  position: absolute;\n  width: 100%;\n  top: 0;\n`;\n\nconst MainBillboardContiner = styled.div`\n  position: absolute;\n  left: 4.5rem;\n  bottom: 15%;\n  font-weight: 200;\n  width: 18rem;\n  line-height: 1.2;\n`;\n\nconst MoveToDetailButton = styled.div`\n  margin-bottom: 1rem;\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  width: 9.5rem;\n  height: 2.5rem;\n  border-radius: 6px;\n  background-color: rgba(255, 255, 255, 0.6);\n  font-size: 0.1rem 0.2rem 0;\n  cursor: pointer;\n\n  &::after {\n    content: \"상세 정보\";\n    font-weight: 600;\n    padding: 0 0.2rem;\n  }\n`;\n\nconst CardContainer = styled.div`\n  padding: 0 1.2rem;\n`;\n\nfunction TV() {\n  const offset = 5;\n  const [billboard, setBillboard] = useState({});\n  const [random, setRandom] = useState();\n\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [popular, setPopular] = useState([]);\n  const [topRated, setTopRated] = useState([]);\n  const [airingToday, setAiringToday] = useState([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    setRandom(Math.floor(Math.random() * offset));\n  }, []);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const {\n          data: { genres },\n        } = await tvApi.getGenres();\n        const {\n          data: { results: popular },\n        } = await tvApi.popular();\n        const {\n          data: { results: topRated },\n        } = await tvApi.topRated();\n        const {\n          data: { results: airingToday },\n        } = await tvApi.airingToday();\n        const { data: results } = await tvApi.tvShowDetail(+popular[random].id);\n\n        const createGenreKey = (datas) =>\n          datas.map((data) => {\n            const { genre_ids } = data;\n            return {\n              ...data,\n              genres: genre_ids.map(\n                (_id) => genres.find(({ id, _ }) => id === _id).name\n              ),\n            };\n          });\n\n        setBillboard(results);\n        setPopular(createGenreKey(top10(noImage(popular))));\n        setTopRated(createGenreKey(noImage(topRated)));\n        setAiringToday(createGenreKey(noImage(airingToday)));\n        setLoading(\n          results && popular && topRated && airingToday ? false : true\n        );\n        setError(\"\");\n      } catch (e) {\n        console.log(e);\n        setError(\"오류가 발생했습니다! TV 프로그램 정보를 찾을 수 없습니다.\");\n      }\n    })();\n  }, [random]);\n\n  const maxOverViewLength = ({ overview }) => {\n    const offset = 100;\n    return overview.length > offset ? overview.indexOf(\".\", offset) : offset;\n  };\n\n  const moveToDetail = (id) => {\n    history.push({\n      pathname: `/tv/${id}`,\n      state: { isMovie: false },\n    });\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>TV - Homeflix</title>\n      </Helmet>\n      {loading ? (\n        <Loader />\n      ) : (\n        <Wrapper>\n          {billboard && (\n            <Billboard\n              bgUrl={billboard.backdrop_path}\n              logos={billboard.images.logos}\n              title={billboard.original_name}\n            >\n              <MainBillboardContiner>\n                <MoveToDetailButton onClick={() => moveToDetail(billboard.id)}>\n                  <FontAwesomeIcon\n                    icon={faInfoCircle}\n                    className=\"fa-info-circle\"\n                  />\n                </MoveToDetailButton>\n                {billboard.overview.length > maxOverViewLength(billboard)\n                  ? billboard.overview.slice(0, maxOverViewLength(billboard)) +\n                    \"...\"\n                  : billboard.overview}\n              </MainBillboardContiner>\n            </Billboard>\n          )}\n          <CardContainer>\n            {popular && popular.length > 0 && (\n              <Section\n                title=\"오늘 TOP 10 TV 프로그램\"\n                keyword=\"popular\"\n                cards={popular}\n                isPopular\n              />\n            )}\n            {topRated && topRated.length > 0 && (\n              <Section\n                title=\"꾸준히 인기 많은 TV 프로그램\"\n                keyword=\"topRated\"\n                cards={topRated}\n              />\n            )}\n            {airingToday && airingToday.length > 0 && (\n              <Section\n                title=\"현재 방영 중인 TV 프로그램\"\n                keyword=\"airingToday\"\n                cards={airingToday}\n              />\n            )}\n            <Detail />\n            {error && <ErrorMsg type=\"error\" text={error} />}\n          </CardContainer>\n        </Wrapper>\n      )}\n    </>\n  );\n}\n\nexport default TV;\n","import { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Helmet from \"react-helmet\";\nimport styled from \"styled-components\";\nimport { moviesApi } from \"../api\";\nimport { noImage, top10 } from \"../utils\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\n\nimport Loader from \"../Components/Loader\";\nimport Billboard from \"../Components/Billboard\";\nimport Section from \"../Components/Section\";\nimport Detail from \"../Components/Detail\";\nimport ErrorMsg from \"../Components/ErrorMsg\";\n\nconst Wrapper = styled.div`\n  position: absolute;\n  width: 100%;\n  top: 0;\n`;\n\nconst MainBillboardContiner = styled.div`\n  position: absolute;\n  left: 4.5rem;\n  bottom: 15%;\n  font-weight: 200;\n  width: 18rem;\n  line-height: 1.2;\n`;\n\nconst MoveToDetailButton = styled.div`\n  margin-bottom: 1rem;\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  width: 9.5rem;\n  height: 2.5rem;\n  border-radius: 6px;\n  background-color: rgba(255, 255, 255, 0.6);\n  font-size: 1.2rem;\n\n  &::after {\n    content: \"상세 정보\";\n    font-weight: 600;\n    padding: 0.1rem 0.2rem 0;\n  }\n`;\n\nconst CardContainer = styled.div`\n  padding: 0 1.2rem;\n`;\n\nfunction Movie() {\n  const offset = 5;\n  const [billboard, setBillboard] = useState({});\n  const [random, setRandom] = useState();\n\n  const [popular, setPopular] = useState([]);\n  const [nowPlaying, setNowPlaying] = useState([]);\n  const [upcoming, setUpcoming] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const history = useHistory();\n\n  const maxOverViewLength = ({ overview }) => {\n    const offset = 100;\n    return overview.length > offset ? overview.indexOf(\".\", offset) : offset;\n  };\n\n  const moveToDetail = (id) => {\n    history.push({\n      pathname: `/movie/${id}`,\n      state: { isMovie: true },\n    });\n  };\n\n  useEffect(() => {\n    setRandom(Math.floor(Math.random() * offset));\n  }, []);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const {\n          data: { genres },\n        } = await moviesApi.getGenres();\n        const {\n          data: { results: popular },\n        } = await moviesApi.popular();\n        const {\n          data: { results: nowPlaying },\n        } = await moviesApi.nowPlaying();\n        const {\n          data: { results: upcoming },\n        } = await moviesApi.upcoming();\n        const { data: results } = await moviesApi.movieDetail(\n          +popular[random].id\n        );\n\n        const createGenreKey = (datas) =>\n          datas.map((data) => {\n            const { genre_ids } = data;\n            return {\n              ...data,\n              genres: genre_ids.map(\n                (_id) => genres.find(({ id, _ }) => id === _id).name\n              ),\n            };\n          });\n\n        setBillboard(results);\n        setPopular(createGenreKey(top10(noImage(popular))));\n        setNowPlaying(createGenreKey(noImage(nowPlaying)));\n        setUpcoming(createGenreKey(noImage(upcoming)));\n        setLoading(results && popular && nowPlaying && upcoming ? false : true);\n        setError(\"\");\n      } catch (e) {\n        console.log(e);\n        setError(\"오류가 발생했습니다! 영화 정보를 찾을 수 없습니다.\");\n      }\n    })();\n  }, [random]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Movie - Homeflix</title>\n      </Helmet>\n      {loading ? (\n        <Loader />\n      ) : (\n        <Wrapper>\n          {billboard && (\n            <Billboard\n              bgUrl={billboard.backdrop_path}\n              logos={billboard.images.logos}\n              title={billboard.original_title}\n            >\n              <MainBillboardContiner>\n                <MoveToDetailButton onClick={() => moveToDetail(billboard.id)}>\n                  <FontAwesomeIcon\n                    icon={faInfoCircle}\n                    className=\"fa-info-circle\"\n                  />\n                </MoveToDetailButton>\n                {billboard.overview.length > maxOverViewLength(billboard)\n                  ? billboard.overview.slice(0, maxOverViewLength(billboard)) +\n                    \"...\"\n                  : billboard.overview}\n              </MainBillboardContiner>\n            </Billboard>\n          )}\n          <CardContainer>\n            {popular && popular.length > 0 && (\n              <Section\n                title=\"오늘 TOP 10 영화\"\n                keyword=\"popular\"\n                cards={popular}\n                isPopular\n              />\n            )}\n            {nowPlaying && nowPlaying.length > 0 && (\n              <Section\n                title=\"지금 상영 중인 영화\"\n                keyword=\"nowPlaying\"\n                cards={nowPlaying}\n              />\n            )}\n            {upcoming && upcoming.length > 0 && (\n              <Section\n                title=\"최근에 개봉한 영화\"\n                keyword=\"upcoming\"\n                cards={upcoming}\n              />\n            )}\n            <Detail />\n            {error && <ErrorMsg type=\"error\" text={error} />}\n          </CardContainer>\n        </Wrapper>\n      )}\n    </>\n  );\n}\n\nexport default Movie;\n","import { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Helmet from \"react-helmet\";\nimport styled from \"styled-components\";\nimport { tvApi, moviesApi } from \"../api\";\nimport { noImage } from \"../utils\";\n\nimport Loader from \"../Components/Loader\";\nimport Section from \"../Components/Section\";\nimport Detail from \"../Components/Detail\";\nimport ErrorMsg from \"../Components/ErrorMsg\";\n\nconst Container = styled.div`\n  padding: 1.2rem;\n`;\n\nconst SearchTerm = styled.div`\n  display: inline-flex;\n  font-weight: 100;\n  .term {\n    font-weight: bolder;\n  }\n`;\n\nfunction Search() {\n  const location = useLocation();\n  const {\n    state: { searchTerm },\n  } = location;\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [tvResults, setTvResults] = useState([]);\n  const [movieResults, setMovieResults] = useState([]);\n  useEffect(() => {\n    (async () => {\n      try {\n        const {\n          data: { genres: tvGenres },\n        } = await tvApi.getGenres();\n        const {\n          data: { results: tvResults },\n        } = await tvApi.search(searchTerm);\n        const {\n          data: { genres: movieGenres },\n        } = await moviesApi.getGenres();\n        const {\n          data: { results: movieResults },\n        } = await moviesApi.search(searchTerm);\n\n        const createGenreKey = (datas, isMovie) =>\n          datas.map((data) => {\n            const { genre_ids } = data;\n            return {\n              ...data,\n              genres: genre_ids\n                .map((_id) => {\n                  const genre = !isMovie\n                    ? tvGenres.find(({ id, _ }) => id === _id)\n                    : movieGenres.find(({ id, _ }) => id === _id);\n                  return genre ? genre.name : \"\";\n                })\n                .filter((name) => name !== \"\"),\n            };\n          });\n\n        setTvResults(createGenreKey(noImage(tvResults), false));\n        setMovieResults(createGenreKey(noImage(movieResults), true));\n        setLoading(tvResults && movieResults ? false : true);\n      } catch {\n        setError(\n          \"오류가 발생했습니다! 입력한 검색어에 대한 결과를 찾을 수 없습니다.\"\n        );\n      }\n    })();\n  }, [searchTerm]);\n\n  return (\n    <>\n      <Helmet>Homeflix</Helmet>\n      {loading ? (\n        <Loader />\n      ) : (\n        <Container>\n          <SearchTerm>\n            검색어 \"<p className=\"term\">{searchTerm}</p>\"에 대한 검색\n            결과입니다.\n          </SearchTerm>\n          {loading ? (\n            <Loader />\n          ) : (\n            <>\n              {tvResults && tvResults.length > 0 && (\n                <Section\n                  isMovie={false}\n                  title=\"TV Resultes\"\n                  keyword=\"tvResults\"\n                  cards={tvResults}\n                />\n              )}\n              {movieResults && movieResults.length > 0 && (\n                <Section\n                  isMovie={true}\n                  title=\"Movie Resultes\"\n                  keyword=\"movieResults\"\n                  cards={movieResults}\n                />\n              )}\n              <Detail />\n              {error && <ErrorMsg type=\"error\" text={error} />}\n              {tvResults &&\n                movieResults &&\n                tvResults.length === 0 &&\n                movieResults.length === 0 && (\n                  <ErrorMsg type=\"404\" text=\"Nothing Found\" />\n                )}\n            </>\n          )}\n          <Detail />\n        </Container>\n      )}\n    </>\n  );\n}\n\nexport default Search;\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Home from \"../Pages/Home\";\nimport TV from \"../Pages/TV\";\nimport Movie from \"../Pages/Movie\";\nimport Search from \"../Pages/Search\";\n\nexport default function Routers() {\n  return (\n    <Router basename=\"/netflix-clone\">\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path={[\"/tv\", \"/tv/:id\"]} component={TV} />\n        <Route exact path={[\"/movie\", \"/movie/:id\"]} component={Movie} />\n        <Route exact path={[\"/search\", \"/search/:id\"]} component={Search} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </Router>\n  );\n}\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    * {\n        box-sizing: border-box;\n    }\n    a {\n        text-decoration: none;\n        color: inherit;\n    }\n    body {\n        font-family: sans-serif;\n        font-size: 16px;\n        background-color: black;\n        color: white;\n        padding-top: 60px;\n        word-break: keep-all;\n        height: 100%;\n    }\n    h1 {\n        font-size: 1.7rem;\n        font-weight: bolder;\n        letter-spacing: 0.1rem;\n    }\n`;\n\nexport default globalStyles;\n","import React from \"react\";\nimport Router from \"./Router\";\nimport GlobalStyles from \"./GlobalStyles\";\n\nfunction App() {\n  return (\n    <>\n      <Router />\n      <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}